##################### 이진탐색

def search (array, target, start, end):
    if start > end:
        return None
    
    mid = (start + end) //2

    if target == array[mid]:
        return mid

    elif target > array[mid]:
        return search(array, target, mid +1, end)
    else:
        return search(array, target, start, mid -1)


n, target = map(int, input().split())
array = list(map(int, input().split()))

result = search(array, target, 0, n-1)
if result == None:
    print("Nothing found")
else:
    print(result +1)
    
    
    
############## 특정 범위 사이에 속하는 데이터 수 구하기

from bisect import bisect_left, bisect_right

def rangesearch(a, left, right):
    right = bisect_right(a, right)
    left = bisect_left(a,left)
    return right - left

a = [1,2,3,3,3,3,4,4,8,9]

print(rangesearch(a,-1,3))
    
    
    
    
    
    
#예시: 떡 절단 길이
def search(n,m,start,end):
    if start > end:
        return None

    mid = (start + end) // 2
    total = 0

    for x in n:
        if x > mid:
            total += x - mid
    
    if total > m:
        return search(n,m, mid+1, end)
    elif total < m:
        return search(n,m,start, mid -1)
    else:
        return mid

n, m = map(int, input().split())
array = list(map(int, input().split()))

result = search (array,m,0,max(array))

if result == None:
    print("Nothing Found")
else:
    print('절단길이: ', result)
    
    
    
    
#    
    
    
    
    
    
    
