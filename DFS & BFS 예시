###########칸막이 얼음곽 음료수 얼리기


n, m = map(int, input().split())
graph = []
for i in range(n):
    graph.append(list(map(int, input())))
count = 0

for i in range(n):
    for j in range(m):
        if dfs(i,j) == True:
            count += 1


def ice(x,y):
    if x<=-1 or x>=n or y <=-1 or y >=m:
        return False
    if graph[x][y] == 0:
        graph[x][y] = 1
        ice(x-1, y)
        ice(x+1, y)
        ice(x, y+1)
        ice (x, y-1)
        return True
    return False



########################괴물 피해서 길찾기

from collections import deque


n, m = map(int, input().split())

monsters = []

for i in range(n):
    monsters.append(list(map(int, input())))

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

def bfs(x,y):
    queue = deque()
    queue.append((x,y))
    while queue:
        x,y = queue.popleft()
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            
            if nx <0 or nx >= n or ny <0 or ny>=m:
                continue
            if monsters[nx][ny] == 0:
                continue
            if monsters[nx][ny] == 1:
                monsters[nx][ny] = monsters[x][y] + 1
                queue.append((nx,ny))
    return monsters[n-1][m-1]


print(bfs(0,0))
